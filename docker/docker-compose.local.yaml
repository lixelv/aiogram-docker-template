name: ${APP_NAME:-PWD##*/}

services:
    app:
        build:
            context: ..
            dockerfile: docker/Dockerfile.prod
        container_name: ${APP_NAME:-PWD##*/}-app
        env_file: ../.env
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST:-db}
            - POSTGRES_PORT=${POSTGRES_PORT:-5432}
        depends_on:
            db:
                condition: service_healthy
        volumes:
            - files:/files

        restart: unless-stopped
        tty: true

    db:
        image: postgres:16
        container_name: ${APP_NAME:-PWD##*/}-postgres-db
        env_file: ../.env
        environment:
            - DB_USER=${POSTGRES_USER}
            - DB_PASS=${POSTGRES_PASSWORD}
            - PGDATA=/data/postgres
        command: postgres -c port=${POSTGRES_PORT:-5432}
        ports:
            - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
        expose:
            - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"

        volumes:
            - postgres-data:/data/postgres
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -h db -p $${POSTGRES_PORT:-5432} -U $${POSTGRES_USER} -d $${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 10s
            retries: 5

        restart: unless-stopped
        tty: true

volumes:
    files:
        name: ${APP_NAME:-PWD##*/}-files
    postgres-data:
        name: ${APP_NAME:-PWD##*/}-postgres-data
